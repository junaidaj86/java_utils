package ${package}.api;

import com.postnord.ndm.base.logger.NdmLogger;
import com.postnord.ndm.base.logger.model.LogRecord;
import com.postnord.ndm.base.test_utils.postgres.PostgresResourceLifecycleManager;
import ${package}.api.model.MovieDto;
import io.quarkus.test.common.QuarkusTestResource;
import io.quarkus.test.junit.QuarkusTest;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;

import java.util.Map;

import static ${package}.util.ConstantsHelper.JSON_B;
import static io.restassured.RestAssured.given;


@QuarkusTest
@QuarkusTestResource(PostgresResourceLifecycleManager.class)
@SuppressWarnings({"PMD.ExcessiveImports", "PMD.AbstractClassWithoutAbstractMethod", "PMD.GuardLogStatement"})
class MovieResourceTest {

       @Test
       @Order(1)
       void testCreateMovie() {

           final MovieDto movie = MovieDto
                   .builder()
                   .title("For a bunch of dollar")
                   .description("adventure fiction")
                   .build();

           NdmLogger.info(LogRecord
                   .builder()
                   .message("The first test case")
                   .extraData(Map.of("movie model", JSON_B.toJson(movie)))
                   .build());

           given()
                   .when()
                   .header("Content-Type", "application/json")
                   .body(JSON_B.toJson(movie))
                   .post("/movies")
                   .then()
                   .statusCode(201);
       }


       @Test
       @Order(2)
       void testGetAll() {
           given()
                   .when()
                   .header("Content-Type", "application/json")
                   .get("/movies")
                   .then()
                   .statusCode(200);
       }

}
