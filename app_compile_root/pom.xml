<?xml version="1.0"?>
<project
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.postnord.ndm.base</groupId>
        <artifactId>lib-compile-root</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>app-compile-root</artifactId>
    <name>Compile root for applications</name>
    <packaging>pom</packaging>

    <properties>
        <maven.deploy.skip>false</maven.deploy.skip>

        <liquibase.plugin.version>4.19.0</liquibase.plugin.version>
        <copy-rename-maven-plugin.version>1.0</copy-rename-maven-plugin.version>
        <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
        <jib.maven.plugin.version>3.3.1</jib.maven.plugin.version>
        <openapi.generator.maven.plugin.additionalProperties>
            useSuperBuilder=false,useNoArgsConstructor=false
        </openapi.generator.maven.plugin.additionalProperties>
        <openapi.api.package>com.postnord.ndm.api</openapi.api.package>
        <openapi.model.package>com.postnord.ndm.api.model</openapi.model.package>
        <jib.goal>dockerBuild</jib.goal>
        <!-- Liquibase plugin configuration -->
        <liquibase.db.driver>org.postgresql.Driver</liquibase.db.driver>
        <!-- liquibase.db.url, liquibase.db.user and liquibase.db.password should be defined from command line -->
        <!-- liquibase.referencedb.url, liquibase.referencedb.user and liquibase.referencedb.password should be defined from command line -->

        <docker.registry>serodocker.sero.gic.postnord.com/proj-iota</docker.registry>
        <docker.image.release.stage>dev</docker.image.release.stage>
        <docker.native.image>${docker.registry}/${docker.image.release.stage}/iota-${project.artifactId}-native</docker.native.image>
        <docker.image>${docker.registry}/${docker.image.release.stage}/iota-${project.artifactId}</docker.image>
        <docker.base.image>${docker.registry}/dcp-openjdk11:latest
        </docker.base.image>
        <docker.common.vmflags>-XshowSettings:vm</docker.common.vmflags>
        <fast.jar.directory>quarkus-app</fast.jar.directory>
        <fast.jar.name>quarkus-run.jar</fast.jar.name>
        <maven.dependency.plugin.version>3.1.2</maven.dependency.plugin.version>

        <sonar.sources>${sonar.sources.base}</sonar.sources>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-maven-plugin</artifactId>
                    <version>${quarkus.platform.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>${liquibase.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.coderplus.maven.plugins</groupId>
                    <artifactId>copy-rename-maven-plugin</artifactId>
                    <version>${copy-rename-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <exclClassLoaders>*QuarkusClassLoader</exclClassLoaders>
                            </configuration>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/jacoco-non-quarkustest</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>merge-results</id>
                            <phase>test</phase>
                            <goals>
                                <goal>merge</goal>
                            </goals>
                            <configuration>
                                <fileSets>
                                    <fileSet>
                                        <directory>${project.build.directory}</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                    </fileSet>
                                </fileSets>
                                <destFile>${project.build.directory}/jacoco.exec</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-merge-report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>liquibase</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration>
                            <url>${liquibase.db.url}</url>
                            <username>${liquibase.db.username}</username>
                            <password>${liquibase.db.password}</password>
                            <changeLogFile>src/main/resources/db/changeLog.yaml</changeLogFile>
                        </configuration>
                        <executions>
                            <execution>
                                <id>gen-baseline</id>
                                <goals>
                                    <goal>generateChangeLog</goal>
                                </goals>
                                <configuration>
                                    <defaultSchemaName>${liquibase.db.dev-schema}</defaultSchemaName>
                                    <outputChangeLogFile>target/changeLog.generated.yaml</outputChangeLogFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>dev-diff</id>
                                <goals>
                                    <goal>diff</goal>
                                </goals>
                                <configuration>
                                    <referenceUrl>${liquibase.db.url}</referenceUrl>
                                    <referenceUsername>${liquibase.db.username}</referenceUsername>
                                    <referencePassword>${liquibase.db.password}</referencePassword>
                                    <referenceDefaultSchemaName>${liquibase.db.dev-schema}</referenceDefaultSchemaName>
                                    <diffChangeLogFile>target/changeLog.diff.yaml</diffChangeLogFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>drop-runtime</id>
                                <goals>
                                    <goal>dropAll</goal>
                                </goals>
                                <configuration>
                                    <schemas>${liquibase.db.username}</schemas>
                                </configuration>
                            </execution>
                            <execution>
                                <id>drop-dev</id>
                                <goals>
                                    <goal>dropAll</goal>
                                </goals>
                                <configuration>
                                    <schemas>${liquibase.db.dev-schema}
                                    </schemas>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
                <quarkus.native.additional-build-args>
                    -H:ReflectionConfigurationFiles=reflection-config.json
                </quarkus.native.additional-build-args>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-build</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.basedir}/src/main/jib/opt/deployments</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/${fast.jar.directory}</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <configuration>
                            <from>
                                <image>${docker.base.image}</image>
                            </from>
                            <to>
                                <image>${docker.image}:${project.version}
                                </image>
                                <tags>
                                    <tag>latest</tag>
                                </tags>
                            </to>
                            <container>
                                <appRoot>/dev/null</appRoot>
                                <workingDirectory>/opt/deployments</workingDirectory>
                                <entrypoint>
                                    <arg>/bin/bash</arg>
                                    <arg>/docker-entrypoint.sh</arg>
                                </entrypoint>
                                <ports>
                                    <port>8080</port>
                                </ports>
                                <user>1001:root</user>
                            </container>
                            <containerizingMode>packaged</containerizingMode>
                            <extraDirectories>
                                <paths>
                                    <path>src/main/jib/</path>
                                </paths>
                                <permissions>
                                    <permission>
                                        <file>/docker-entrypoint.sh</file>
                                        <mode>755</mode>
                                    </permission>
                                    <permission>
                                        <file>/opt/deployments/lib</file>
                                        <mode>755</mode>
                                    </permission>
                                    <permission>
                                        <file>/opt/deployments/app</file>
                                        <mode>755</mode>
                                    </permission>
                                    <permission>
                                        <file>/opt/deployments/quarkus</file>
                                        <mode>755</mode>
                                    </permission>
                                </permissions>
                            </extraDirectories>
                        </configuration>
                        <executions>
                            <execution>
                                <id>jib-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>${jib.goal}</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native-docker-build</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.coderplus.maven.plugins</groupId>
                        <artifactId>copy-rename-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-rename-executable</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <sourceFile>
                                        ${project.build.directory}/${project.artifactId}-${project.version}-runner
                                    </sourceFile>
                                    <destinationFile>
                                        ${project.basedir}/src/main/jib/work/application
                                    </destinationFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <configuration>
                            <from>
                                <image>${docker.base.image}</image>
                            </from>
                            <to>
                                <image>${docker.native.image}:${project.version}
                                </image>
                            </to>
                            <container>
                                <appRoot>/dev/null</appRoot>
                                <workingDirectory>/work</workingDirectory>
                                <entrypoint>
                                    <arg>/bin/bash</arg>
                                    <arg>/docker-entrypoint.sh</arg>
                                </entrypoint>
                                <ports>
                                    <port>8080</port>
                                </ports>
                                <user>1001:root</user>
                            </container>
                            <containerizingMode>packaged</containerizingMode>
                            <extraDirectories>
                                <paths>
                                    <path>src/main/jib/</path>
                                </paths>
                                <permissions>
                                    <permission>
                                        <file>/docker-entrypoint.sh</file>
                                        <mode>755</mode>
                                    </permission>
                                    <permission>
                                        <file>/work/application</file>
                                        <mode>755</mode>
                                    </permission>
                                </permissions>
                            </extraDirectories>
                        </configuration>
                        <executions>
                            <execution>
                                <id>jib-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>${jib.goal}</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate-api</id>
            <activation>
                <file>
                    <exists>generate-api</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-openapi-generator-templates</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.postnord.ndm.base</groupId>
                                            <artifactId>openapi</artifactId>
                                            <type>jar</type>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                            <includes>**/*.mustache</includes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.openapitools</groupId>
                        <artifactId>openapi-generator-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-api</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <inputSpec>
                                        ${basedir}/src/main/resources/META-INF/openapi.yaml
                                    </inputSpec>
                                    <output>
                                        ${project.build.directory}/generated-sources/openapi
                                    </output>
                                    <generatorName>jaxrs-spec</generatorName>
                                    <templateDirectory>
                                        ${project.build.directory}/openapi-generator-templates
                                    </templateDirectory>
                                    <generateApiTests>false</generateApiTests>
                                    <skipOverwrite>true</skipOverwrite>
                                    <generateModelTests>false</generateModelTests>
                                    <generateSupportingFiles>false</generateSupportingFiles>
                                    <generateModelDocumentation>false</generateModelDocumentation>
                                    <generateApis>true</generateApis>
                                    <apiPackage>${openapi.api.package}</apiPackage>
                                    <modelPackage>${openapi.model.package}</modelPackage>
                                    <typeMappings>
                                        <typeMapping>OffsetDateTime=Instant</typeMapping>
                                    </typeMappings>
                                    <importMappings>
                                        <importMapping>java.time.OffsetDateTime=java.time.Instant</importMapping>
                                    </importMappings>
                                    <configOptions>
                                        <library>quarkus</library>
                                        <java8>true</java8>
                                        <dateLibrary>java8</dateLibrary>
                                        <interfaceOnly>true</interfaceOnly>
                                        <useSwaggerAnnotations>false</useSwaggerAnnotations>
                                        <useBeanValidation>true</useBeanValidation>
                                        <hideGenerationTimestamp>false</hideGenerationTimestamp>
                                        <openApiNullable>false</openApiNullable>
                                    </configOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sort-api-imports</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                                <configuration>
                                    <directories>
                                        <directory>${project.build.directory}/generated-sources/openapi</directory>
                                    </directories>
                                    <removeUnused>true</removeUnused>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>
                                            ${project.build.directory}/generated-sources/openapi/src/gen/java
                                        </source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate-api-for-tests</id>
            <activation>
                <file>
                    <exists>generate-api-for-tests</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-openapi-generator-templates-for-tests</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.postnord.ndm.base</groupId>
                                            <artifactId>openapi</artifactId>
                                            <type>jar</type>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                            <includes>**/*.mustache</includes>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.openapitools</groupId>
                        <artifactId>openapi-generator-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-test-api</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <inputSpec>
                                        ${basedir}/src/main/resources/META-INF/openapi.yaml
                                    </inputSpec>
                                    <output>
                                        ${project.build.directory}/generated-test-sources/openapi
                                    </output>
                                    <generatorName>jaxrs-spec</generatorName>
                                    <templateDirectory>
                                        ${project.build.directory}/openapi-generator-templates
                                    </templateDirectory>
                                    <generateApiTests>false</generateApiTests>
                                    <skipOverwrite>true</skipOverwrite>
                                    <generateModelTests>false</generateModelTests>
                                    <generateSupportingFiles>false</generateSupportingFiles>
                                    <generateModelDocumentation>false</generateModelDocumentation>
                                    <generateApis>false</generateApis>
                                    <modelPackage>com.postnord.ndm.test.model</modelPackage>
                                    <configOptions>
                                        <library>quarkus</library>
                                        <java8>true</java8>
                                        <dateLibrary>java8</dateLibrary>
                                        <interfaceOnly>true</interfaceOnly>
                                        <useSwaggerAnnotations>false</useSwaggerAnnotations>
                                        <useBeanValidation>false</useBeanValidation>
                                        <hideGenerationTimestamp>false</hideGenerationTimestamp>
                                    </configOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sort-test-api-imports</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                                <configuration>
                                    <directories>
                                        <directory>${project.build.directory}/generated-test-sources/openapi</directory>
                                    </directories>
                                    <removeUnused>true</removeUnused>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-test-sources</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>
                                            ${project.build.directory}/generated-test-sources/openapi/src/gen/java
                                        </source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jacoco</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.postnord.ndm.base</groupId>
                <artifactId>openapi</artifactId>
                <version>${project.parent.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
