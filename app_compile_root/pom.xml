<?xml version="1.0"?>
<project
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.postnord.ndm.base</groupId>
        <artifactId>lib-compile-root</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../lib_compile_root/pom.xml</relativePath>
    </parent>

    <artifactId>app-compile-root</artifactId>
    <name>Compile root for applications</name>
    <packaging>pom</packaging>

    <properties>
        <liquibase.plugin.version>4.19.0</liquibase.plugin.version>
        <copy-rename-maven-plugin.version>1.0</copy-rename-maven-plugin.version>
        <jib.maven.plugin.version>3.3.1</jib.maven.plugin.version>
        <openapi.generator.maven.plugin.additionalProperties>
            useSuperBuilder=false,useNoArgsConstructor=false
        </openapi.generator.maven.plugin.additionalProperties>
        <openapi.api.package>com.postnord.ndm.api</openapi.api.package>
        <openapi.model.package>com.postnord.ndm.api.model</openapi.model.package>
        <jib.goal>dockerBuild</jib.goal>
        <!-- Liquibase plugin configuration -->
        <liquibase.db.driver>org.postgresql.Driver</liquibase.db.driver>
        <!-- liquibase.db.url, liquibase.db.user and liquibase.db.password should be defined from command line -->
        <!-- liquibase.referencedb.url, liquibase.referencedb.user and liquibase.referencedb.password should be defined from command line -->

        <docker.registry>serodocker.sero.gic.postnord.com/proj-iota</docker.registry>
        <docker.image.release.stage>dev</docker.image.release.stage>
        <docker.native.image>${docker.registry}/${docker.image.release.stage}/iota-${project.artifactId}-native</docker.native.image>
        <docker.image>${docker.registry}/${docker.image.release.stage}/iota-${project.artifactId}</docker.image>
        <docker.base.image>${docker.registry}/dcp-openjdk11:latest
        </docker.base.image>
        <docker.common.vmflags>-XshowSettings:vm</docker.common.vmflags>
        <fast.jar.directory>quarkus-app</fast.jar.directory>
        <fast.jar.name>quarkus-run.jar</fast.jar.name>
        <maven.dependency.plugin.version>3.1.2</maven.dependency.plugin.version>
        <jsonschema2pojo.version>1.2.1</jsonschema2pojo.version>
        <sonar.sources>${sonar.sources.base}</sonar.sources>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-maven-plugin</artifactId>
                    <version>${quarkus.platform.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>${liquibase.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.coderplus.maven.plugins</groupId>
                    <artifactId>copy-rename-maven-plugin</artifactId>
                    <version>${copy-rename-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <exclClassLoaders>*QuarkusClassLoader</exclClassLoaders>
                            </configuration>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/jacoco-non-quarkustest</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>merge-results</id>
                            <phase>test</phase>
                            <goals>
                                <goal>merge</goal>
                            </goals>
                            <configuration>
                                <fileSets>
                                    <fileSet>
                                        <directory>${project.build.directory}</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                    </fileSet>
                                </fileSets>
                                <destFile>${project.build.directory}/jacoco.exec</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-merge-report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
                <quarkus.native.additional-build-args>
                    -H:ReflectionConfigurationFiles=reflection-config.json
                </quarkus.native.additional-build-args>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.openapitools</groupId>
                        <artifactId>openapi-generator-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-api</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <inputSpec>
                                        ${basedir}/src/main/resources/META-INF/openapi.yaml
                                    </inputSpec>
                                    <output>
                                        ${project.build.directory}/generated-sources/openapi
                                    </output>
                                    <generatorName>jaxrs-spec</generatorName>
                                    <generateApiTests>false</generateApiTests>
                                    <ignoreFileOverride>${project.basedir}</ignoreFileOverride>
                                    <generateModelTests>false</generateModelTests>
                                    <generateSupportingFiles>false</generateSupportingFiles>
                                    <generateModelDocumentation>false</generateModelDocumentation>
                                    <generateApis>true</generateApis>
                                    <apiPackage>${openapi.api.package}</apiPackage>
                                    <modelPackage>${openapi.model.package}</modelPackage>
                                    <typeMappings>
                                        <typeMapping>OffsetDateTime=Instant</typeMapping>
                                    </typeMappings>
                                    <importMappings>
                                        <importMapping>java.time.OffsetDateTime=java.time.Instant</importMapping>
                                    </importMappings>
                                    <addCompileSourceRoot>true</addCompileSourceRoot>
                                    <configOptions>
                                        <library>quarkus</library>
                                        <useJakartaEe>true</useJakartaEe>
                                        <additionalModelTypeAnnotations>
                                            @io.quarkus.runtime.annotations.RegisterForReflection
                                        </additionalModelTypeAnnotations>
                                        <generateBuilders>true</generateBuilders>
                                        <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                        <generateModels>true</generateModels>
                                        <generateSupportingFiles>false</generateSupportingFiles>
                                        <interfaceOnly>true</interfaceOnly>
                                        <useSwaggerAnnotations>false</useSwaggerAnnotations>
                                        <dateLibrary>java8</dateLibrary>
                                        <returnResponse>true</returnResponse>
                                    </configOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sort-api-imports</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                                <configuration>
                                    <directories>
                                        <directory>${project.build.directory}/generated-sources/openapi</directory>
                                    </directories>
                                    <removeUnused>true</removeUnused>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>
                                            ${project.build.directory}/generated-sources/openapi/src/gen/java
                                        </source>
                                        <source>
                                            ${project.build.directory}/generated-sources/jsonschema2pojo
                                        </source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <quarkus.native.native-image-xmx>8g</quarkus.native.native-image-xmx>
                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native-docker-build</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.coderplus.maven.plugins</groupId>
                        <artifactId>copy-rename-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-rename-executable</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <sourceFile>
                                        ${project.build.directory}/${project.artifactId}-${project.version}-runner
                                    </sourceFile>
                                    <destinationFile>
                                        ${project.basedir}/src/main/jib/work/application
                                    </destinationFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate-api</id>
            <activation>
                <file>
                    <exists>generate-api</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.openapitools</groupId>
                        <artifactId>openapi-generator-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-api</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <inputSpec>
                                        ${basedir}/src/main/resources/META-INF/openapi.yaml
                                    </inputSpec>
                                    <output>
                                        ${project.build.directory}/generated-sources/openapi
                                    </output>
                                    <generatorName>jaxrs-spec</generatorName>
                                    <generateApiTests>false</generateApiTests>
                                    <ignoreFileOverride>${project.basedir}</ignoreFileOverride>
                                    <generateModelTests>false</generateModelTests>
                                    <generateSupportingFiles>false</generateSupportingFiles>
                                    <generateModelDocumentation>false</generateModelDocumentation>
                                    <generateApis>true</generateApis>
                                    <apiPackage>${openapi.api.package}</apiPackage>
                                    <modelPackage>${openapi.model.package}</modelPackage>
                                    <typeMappings>
                                        <typeMapping>OffsetDateTime=Instant</typeMapping>
                                    </typeMappings>
                                    <importMappings>
                                        <importMapping>java.time.OffsetDateTime=java.time.Instant</importMapping>
                                    </importMappings>
                                    <addCompileSourceRoot>true</addCompileSourceRoot>
                                    <configOptions>
                                        <library>quarkus</library>
                                        <useJakartaEe>true</useJakartaEe>
                                        <additionalModelTypeAnnotations>
                                            @io.quarkus.runtime.annotations.RegisterForReflection
                                        </additionalModelTypeAnnotations>
                                        <generateBuilders>true</generateBuilders>
                                        <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                        <generateModels>true</generateModels>
                                        <generateSupportingFiles>false</generateSupportingFiles>
                                        <interfaceOnly>true</interfaceOnly>
                                        <useSwaggerAnnotations>false</useSwaggerAnnotations>
                                        <dateLibrary>java8</dateLibrary>
                                        <returnResponse>true</returnResponse>
                                    </configOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sort-api-imports</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                                <configuration>
                                    <directories>
                                        <directory>${project.build.directory}/generated-sources/openapi</directory>
                                    </directories>
                                    <removeUnused>true</removeUnused>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>
                                            ${project.build.directory}/generated-sources/openapi/src/gen/java
                                        </source>
                                        <source>
                                            ${project.build.directory}/generated-sources/jsonschema2pojo
                                        </source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jacoco</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.postnord.ndm.base</groupId>
                <artifactId>openapi</artifactId>
                <version>${project.parent.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
